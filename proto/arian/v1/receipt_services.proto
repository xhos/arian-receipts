syntax = "proto3";

package ariand.v1;

import "ariand/v1/receipts.proto";
import "ariand/v1/enums.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option go_package = "ariand/gen/go/ariand/v1;ariandv1";

service ReceiptService {
  rpc ListReceipts(ListReceiptsRequest) returns (ListReceiptsResponse);
  rpc GetReceipt(GetReceiptRequest) returns (GetReceiptResponse);
  rpc CreateReceipt(CreateReceiptRequest) returns (CreateReceiptResponse);
  rpc UploadReceipt(UploadReceiptRequest) returns (UploadReceiptResponse);
  rpc UpdateReceipt(UpdateReceiptRequest) returns (UpdateReceiptResponse);
  rpc DeleteReceipt(DeleteReceiptRequest) returns (DeleteReceiptResponse);
  rpc ParseReceipt(ParseReceiptRequest) returns (ParseReceiptResponse);
  rpc GetReceiptsByTransaction(GetReceiptsByTransactionRequest) returns (GetReceiptsByTransactionResponse);
  rpc SearchReceipts(SearchReceiptsRequest) returns (SearchReceiptsResponse);
  
  // Receipt items management
  rpc ListReceiptItems(ListReceiptItemsRequest) returns (ListReceiptItemsResponse);
  rpc GetReceiptItem(GetReceiptItemRequest) returns (GetReceiptItemResponse);
  rpc CreateReceiptItem(CreateReceiptItemRequest) returns (CreateReceiptItemResponse);
  rpc UpdateReceiptItem(UpdateReceiptItemRequest) returns (UpdateReceiptItemResponse);
  rpc DeleteReceiptItem(DeleteReceiptItemRequest) returns (DeleteReceiptItemResponse);
  rpc BulkCreateReceiptItems(BulkCreateReceiptItemsRequest) returns (BulkCreateReceiptItemsResponse);
  rpc DeleteReceiptItemsByReceipt(DeleteReceiptItemsByReceiptRequest) returns (DeleteReceiptItemsByReceiptResponse);
  
  // Utility operations
  rpc GetUnlinkedReceipts(GetUnlinkedReceiptsRequest) returns (GetUnlinkedReceiptsResponse);
  rpc GetReceiptMatchCandidates(GetReceiptMatchCandidatesRequest) returns (GetReceiptMatchCandidatesResponse);
}

message ListReceiptsRequest {
  string user_id = 1;
  optional int32 limit = 2;
  optional int32 offset = 3;
  optional ReceiptLinkStatus link_status = 4;
  optional ReceiptParseStatus parse_status = 5;
  optional google.protobuf.Timestamp start_date = 6;
  optional google.protobuf.Timestamp end_date = 7;
}

message ListReceiptsResponse {
  repeated Receipt receipts = 1;
  int64 total_count = 2;
}

message GetReceiptRequest {
  string user_id = 1;
  int64 id = 2;
}

message GetReceiptResponse {
  Receipt receipt = 1;
}

message UploadReceiptRequest {
  string user_id = 1;
  bytes file_data = 2;
  string filename = 3;
  string content_type = 4;
  optional string notes = 5;
  optional ReceiptEngine engine = 6;
}

message UploadReceiptResponse {
  Receipt receipt = 1;
}

message UpdateReceiptRequest {
  string user_id = 1;
  int64 id = 2;
  google.protobuf.FieldMask update_mask = 3;
  
  optional string notes = 4;
  optional ReceiptLinkStatus link_status = 5;
  optional ReceiptParseStatus parse_status = 6;
}

message UpdateReceiptResponse {
  Receipt receipt = 1;
}

message DeleteReceiptRequest {
  string user_id = 1;
  int64 id = 2;
}

message DeleteReceiptResponse {
  int64 affected_rows = 1;
}


message ParseReceiptRequest {
  string user_id = 1;
  int64 receipt_id = 2;
  optional ReceiptEngine engine = 3;
  optional bool force_reparse = 4;
}

message ParseReceiptResponse {
  Receipt receipt = 1;
}

message GetReceiptsByTransactionRequest {
  string user_id = 1;
  int64 transaction_id = 2;
}

message GetReceiptsByTransactionResponse {
  repeated Receipt receipts = 1;
}

message SearchReceiptsRequest {
  string user_id = 1;
  string query = 2;
  optional int32 limit = 3;
  optional int32 offset = 4;
  optional ReceiptLinkStatus link_status = 5;
  optional ReceiptParseStatus parse_status = 6;
}

message SearchReceiptsResponse {
  repeated Receipt receipts = 1;
  int64 total_count = 2;
}

message CreateReceiptRequest {
  ReceiptEngine engine = 1;
  optional ReceiptParseStatus parse_status = 2;
  optional ReceiptLinkStatus link_status = 3;
  repeated int64 match_ids = 4;
  optional string merchant = 5;
  optional google.protobuf.Timestamp purchase_date = 6;
  optional double total_amount = 7;
  optional string currency = 8;
  optional double tax_amount = 9;
  optional bytes raw_payload = 10;
  optional bytes canonical_data = 11;
  optional string image_url = 12;
  optional bytes image_sha256 = 13;
  optional double lat = 14;
  optional double lon = 15;
  optional string location_source = 16;
  optional string location_label = 17;
}

message CreateReceiptResponse {
  Receipt receipt = 1;
}

// Receipt items management
message ListReceiptItemsRequest {
  int64 receipt_id = 1;
}

message ListReceiptItemsResponse {
  repeated ReceiptItem items = 1;
}

message GetReceiptItemRequest {
  int64 id = 1;
}

message GetReceiptItemResponse {
  ReceiptItem item = 1;
}

message CreateReceiptItemRequest {
  int64 receipt_id = 1;
  optional int32 line_no = 2;
  string name = 3;
  optional double qty = 4;
  optional double unit_price = 5;
  optional double line_total = 6;
  optional string sku = 7;
  optional string category_hint = 8;
}

message CreateReceiptItemResponse {
  ReceiptItem item = 1;
}

message UpdateReceiptItemRequest {
  int64 id = 1;
  google.protobuf.FieldMask update_mask = 2;
  optional int32 line_no = 3;
  optional string name = 4;
  optional double qty = 5;
  optional double unit_price = 6;
  optional double line_total = 7;
  optional string sku = 8;
  optional string category_hint = 9;
}

message UpdateReceiptItemResponse {
  ReceiptItem item = 1;
}

message DeleteReceiptItemRequest {
  int64 id = 1;
}

message DeleteReceiptItemResponse {
  int64 affected_rows = 1;
}

message BulkCreateReceiptItemsRequest {
  repeated CreateReceiptItemRequest items = 1;
}

message BulkCreateReceiptItemsResponse {
  repeated ReceiptItem items = 1;
  int64 affected_rows = 2;
}

message DeleteReceiptItemsByReceiptRequest {
  int64 receipt_id = 1;
}

message DeleteReceiptItemsByReceiptResponse {
  int64 affected_rows = 1;
}

// Utility operations
message GetUnlinkedReceiptsRequest {
  optional int32 limit = 1;
}

message GetUnlinkedReceiptsResponse {
  repeated ReceiptSummary receipts = 1;
}

message GetReceiptMatchCandidatesRequest {}

message GetReceiptMatchCandidatesResponse {
  repeated ReceiptMatchCandidate candidates = 1;
}