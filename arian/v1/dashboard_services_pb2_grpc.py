# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from arian.v1 import dashboard_services_pb2 as arian_dot_v1_dot_dashboard__services__pb2


class DashboardServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDashboardSummary = channel.unary_unary(
                '/arian.v1.DashboardService/GetDashboardSummary',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetDashboardSummaryRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetDashboardSummaryResponse.FromString,
                )
        self.GetTrendData = channel.unary_unary(
                '/arian.v1.DashboardService/GetTrendData',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTrendDataRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTrendDataResponse.FromString,
                )
        self.GetMonthlyComparison = channel.unary_unary(
                '/arian.v1.DashboardService/GetMonthlyComparison',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetMonthlyComparisonRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetMonthlyComparisonResponse.FromString,
                )
        self.GetTopCategories = channel.unary_unary(
                '/arian.v1.DashboardService/GetTopCategories',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTopCategoriesRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTopCategoriesResponse.FromString,
                )
        self.GetTopMerchants = channel.unary_unary(
                '/arian.v1.DashboardService/GetTopMerchants',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTopMerchantsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTopMerchantsResponse.FromString,
                )
        self.GetAccountSummary = channel.unary_unary(
                '/arian.v1.DashboardService/GetAccountSummary',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetAccountSummaryRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetAccountSummaryResponse.FromString,
                )
        self.GetAccountBalances = channel.unary_unary(
                '/arian.v1.DashboardService/GetAccountBalances',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetAccountBalancesRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetAccountBalancesResponse.FromString,
                )
        self.GetSpendingTrends = channel.unary_unary(
                '/arian.v1.DashboardService/GetSpendingTrends',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetSpendingTrendsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetSpendingTrendsResponse.FromString,
                )
        self.GetTotalBalance = channel.unary_unary(
                '/arian.v1.DashboardService/GetTotalBalance',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTotalBalanceRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTotalBalanceResponse.FromString,
                )
        self.GetTotalDebt = channel.unary_unary(
                '/arian.v1.DashboardService/GetTotalDebt',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTotalDebtRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTotalDebtResponse.FromString,
                )
        self.GetNetBalance = channel.unary_unary(
                '/arian.v1.DashboardService/GetNetBalance',
                request_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetNetBalanceRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetNetBalanceResponse.FromString,
                )


class DashboardServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDashboardSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrendData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMonthlyComparison(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopCategories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopMerchants(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountSummary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountBalances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpendingTrends(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotalBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTotalDebt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNetBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DashboardServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDashboardSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDashboardSummary,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetDashboardSummaryRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetDashboardSummaryResponse.SerializeToString,
            ),
            'GetTrendData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrendData,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTrendDataRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTrendDataResponse.SerializeToString,
            ),
            'GetMonthlyComparison': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMonthlyComparison,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetMonthlyComparisonRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetMonthlyComparisonResponse.SerializeToString,
            ),
            'GetTopCategories': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopCategories,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTopCategoriesRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTopCategoriesResponse.SerializeToString,
            ),
            'GetTopMerchants': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopMerchants,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTopMerchantsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTopMerchantsResponse.SerializeToString,
            ),
            'GetAccountSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountSummary,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetAccountSummaryRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetAccountSummaryResponse.SerializeToString,
            ),
            'GetAccountBalances': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountBalances,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetAccountBalancesRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetAccountBalancesResponse.SerializeToString,
            ),
            'GetSpendingTrends': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpendingTrends,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetSpendingTrendsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetSpendingTrendsResponse.SerializeToString,
            ),
            'GetTotalBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTotalBalance,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTotalBalanceRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTotalBalanceResponse.SerializeToString,
            ),
            'GetTotalDebt': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTotalDebt,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetTotalDebtRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetTotalDebtResponse.SerializeToString,
            ),
            'GetNetBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNetBalance,
                    request_deserializer=arian_dot_v1_dot_dashboard__services__pb2.GetNetBalanceRequest.FromString,
                    response_serializer=arian_dot_v1_dot_dashboard__services__pb2.GetNetBalanceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arian.v1.DashboardService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DashboardService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDashboardSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetDashboardSummary',
            arian_dot_v1_dot_dashboard__services__pb2.GetDashboardSummaryRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetDashboardSummaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTrendData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetTrendData',
            arian_dot_v1_dot_dashboard__services__pb2.GetTrendDataRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetTrendDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMonthlyComparison(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetMonthlyComparison',
            arian_dot_v1_dot_dashboard__services__pb2.GetMonthlyComparisonRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetMonthlyComparisonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetTopCategories',
            arian_dot_v1_dot_dashboard__services__pb2.GetTopCategoriesRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetTopCategoriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopMerchants(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetTopMerchants',
            arian_dot_v1_dot_dashboard__services__pb2.GetTopMerchantsRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetTopMerchantsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetAccountSummary',
            arian_dot_v1_dot_dashboard__services__pb2.GetAccountSummaryRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetAccountSummaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountBalances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetAccountBalances',
            arian_dot_v1_dot_dashboard__services__pb2.GetAccountBalancesRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetAccountBalancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpendingTrends(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetSpendingTrends',
            arian_dot_v1_dot_dashboard__services__pb2.GetSpendingTrendsRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetSpendingTrendsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTotalBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetTotalBalance',
            arian_dot_v1_dot_dashboard__services__pb2.GetTotalBalanceRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetTotalBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTotalDebt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetTotalDebt',
            arian_dot_v1_dot_dashboard__services__pb2.GetTotalDebtRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetTotalDebtResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNetBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.DashboardService/GetNetBalance',
            arian_dot_v1_dot_dashboard__services__pb2.GetNetBalanceRequest.SerializeToString,
            arian_dot_v1_dot_dashboard__services__pb2.GetNetBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
