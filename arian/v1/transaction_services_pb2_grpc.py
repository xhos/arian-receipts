# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from arian.v1 import transaction_services_pb2 as arian_dot_v1_dot_transaction__services__pb2


class TransactionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListTransactions = channel.unary_unary(
                '/arian.v1.TransactionService/ListTransactions',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.ListTransactionsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.ListTransactionsResponse.FromString,
                )
        self.GetTransaction = channel.unary_unary(
                '/arian.v1.TransactionService/GetTransaction',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionResponse.FromString,
                )
        self.CreateTransaction = channel.unary_unary(
                '/arian.v1.TransactionService/CreateTransaction',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.CreateTransactionRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.CreateTransactionResponse.FromString,
                )
        self.UpdateTransaction = channel.unary_unary(
                '/arian.v1.TransactionService/UpdateTransaction',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.UpdateTransactionRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.UpdateTransactionResponse.FromString,
                )
        self.DeleteTransaction = channel.unary_unary(
                '/arian.v1.TransactionService/DeleteTransaction',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.DeleteTransactionRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.DeleteTransactionResponse.FromString,
                )
        self.BulkDeleteTransactions = channel.unary_unary(
                '/arian.v1.TransactionService/BulkDeleteTransactions',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.BulkDeleteTransactionsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.BulkDeleteTransactionsResponse.FromString,
                )
        self.CategorizeTransaction = channel.unary_unary(
                '/arian.v1.TransactionService/CategorizeTransaction',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.CategorizeTransactionRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.CategorizeTransactionResponse.FromString,
                )
        self.SearchTransactions = channel.unary_unary(
                '/arian.v1.TransactionService/SearchTransactions',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.SearchTransactionsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.SearchTransactionsResponse.FromString,
                )
        self.GetTransactionsByAccount = channel.unary_unary(
                '/arian.v1.TransactionService/GetTransactionsByAccount',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionsByAccountRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionsByAccountResponse.FromString,
                )
        self.GetUncategorizedTransactions = channel.unary_unary(
                '/arian.v1.TransactionService/GetUncategorizedTransactions',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.GetUncategorizedTransactionsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.GetUncategorizedTransactionsResponse.FromString,
                )
        self.BulkCategorizeTransactions = channel.unary_unary(
                '/arian.v1.TransactionService/BulkCategorizeTransactions',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.BulkCategorizeTransactionsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.BulkCategorizeTransactionsResponse.FromString,
                )
        self.GetTransactionCountByAccount = channel.unary_unary(
                '/arian.v1.TransactionService/GetTransactionCountByAccount',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionCountByAccountRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionCountByAccountResponse.FromString,
                )
        self.FindCandidateTransactions = channel.unary_unary(
                '/arian.v1.TransactionService/FindCandidateTransactions',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.FindCandidateTransactionsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.FindCandidateTransactionsResponse.FromString,
                )
        self.IdentifyMerchant = channel.unary_unary(
                '/arian.v1.TransactionService/IdentifyMerchant',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.IdentifyMerchantRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.IdentifyMerchantResponse.FromString,
                )
        self.SetTransactionReceipt = channel.unary_unary(
                '/arian.v1.TransactionService/SetTransactionReceipt',
                request_serializer=arian_dot_v1_dot_transaction__services__pb2.SetTransactionReceiptRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_transaction__services__pb2.SetTransactionReceiptResponse.FromString,
                )


class TransactionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkDeleteTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CategorizeTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionsByAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUncategorizedTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkCategorizeTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionCountByAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCandidateTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IdentifyMerchant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTransactionReceipt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransactionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTransactions,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.ListTransactionsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.ListTransactionsResponse.SerializeToString,
            ),
            'GetTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransaction,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionResponse.SerializeToString,
            ),
            'CreateTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTransaction,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.CreateTransactionRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.CreateTransactionResponse.SerializeToString,
            ),
            'UpdateTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTransaction,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.UpdateTransactionRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.UpdateTransactionResponse.SerializeToString,
            ),
            'DeleteTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTransaction,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.DeleteTransactionRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.DeleteTransactionResponse.SerializeToString,
            ),
            'BulkDeleteTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkDeleteTransactions,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.BulkDeleteTransactionsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.BulkDeleteTransactionsResponse.SerializeToString,
            ),
            'CategorizeTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CategorizeTransaction,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.CategorizeTransactionRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.CategorizeTransactionResponse.SerializeToString,
            ),
            'SearchTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTransactions,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.SearchTransactionsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.SearchTransactionsResponse.SerializeToString,
            ),
            'GetTransactionsByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionsByAccount,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionsByAccountRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionsByAccountResponse.SerializeToString,
            ),
            'GetUncategorizedTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUncategorizedTransactions,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.GetUncategorizedTransactionsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.GetUncategorizedTransactionsResponse.SerializeToString,
            ),
            'BulkCategorizeTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkCategorizeTransactions,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.BulkCategorizeTransactionsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.BulkCategorizeTransactionsResponse.SerializeToString,
            ),
            'GetTransactionCountByAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionCountByAccount,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionCountByAccountRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.GetTransactionCountByAccountResponse.SerializeToString,
            ),
            'FindCandidateTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCandidateTransactions,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.FindCandidateTransactionsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.FindCandidateTransactionsResponse.SerializeToString,
            ),
            'IdentifyMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.IdentifyMerchant,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.IdentifyMerchantRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.IdentifyMerchantResponse.SerializeToString,
            ),
            'SetTransactionReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTransactionReceipt,
                    request_deserializer=arian_dot_v1_dot_transaction__services__pb2.SetTransactionReceiptRequest.FromString,
                    response_serializer=arian_dot_v1_dot_transaction__services__pb2.SetTransactionReceiptResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arian.v1.TransactionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TransactionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/ListTransactions',
            arian_dot_v1_dot_transaction__services__pb2.ListTransactionsRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.ListTransactionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/GetTransaction',
            arian_dot_v1_dot_transaction__services__pb2.GetTransactionRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.GetTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/CreateTransaction',
            arian_dot_v1_dot_transaction__services__pb2.CreateTransactionRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.CreateTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/UpdateTransaction',
            arian_dot_v1_dot_transaction__services__pb2.UpdateTransactionRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.UpdateTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/DeleteTransaction',
            arian_dot_v1_dot_transaction__services__pb2.DeleteTransactionRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.DeleteTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkDeleteTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/BulkDeleteTransactions',
            arian_dot_v1_dot_transaction__services__pb2.BulkDeleteTransactionsRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.BulkDeleteTransactionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CategorizeTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/CategorizeTransaction',
            arian_dot_v1_dot_transaction__services__pb2.CategorizeTransactionRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.CategorizeTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/SearchTransactions',
            arian_dot_v1_dot_transaction__services__pb2.SearchTransactionsRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.SearchTransactionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionsByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/GetTransactionsByAccount',
            arian_dot_v1_dot_transaction__services__pb2.GetTransactionsByAccountRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.GetTransactionsByAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUncategorizedTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/GetUncategorizedTransactions',
            arian_dot_v1_dot_transaction__services__pb2.GetUncategorizedTransactionsRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.GetUncategorizedTransactionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkCategorizeTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/BulkCategorizeTransactions',
            arian_dot_v1_dot_transaction__services__pb2.BulkCategorizeTransactionsRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.BulkCategorizeTransactionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionCountByAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/GetTransactionCountByAccount',
            arian_dot_v1_dot_transaction__services__pb2.GetTransactionCountByAccountRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.GetTransactionCountByAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCandidateTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/FindCandidateTransactions',
            arian_dot_v1_dot_transaction__services__pb2.FindCandidateTransactionsRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.FindCandidateTransactionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IdentifyMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/IdentifyMerchant',
            arian_dot_v1_dot_transaction__services__pb2.IdentifyMerchantRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.IdentifyMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTransactionReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.TransactionService/SetTransactionReceipt',
            arian_dot_v1_dot_transaction__services__pb2.SetTransactionReceiptRequest.SerializeToString,
            arian_dot_v1_dot_transaction__services__pb2.SetTransactionReceiptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
