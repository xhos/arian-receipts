# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from arian.v1 import account_services_pb2 as arian_dot_v1_dot_account__services__pb2


class AccountServiceStub(object):
    """Account management service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListAccounts = channel.unary_unary(
                '/arian.v1.AccountService/ListAccounts',
                request_serializer=arian_dot_v1_dot_account__services__pb2.ListAccountsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.ListAccountsResponse.FromString,
                )
        self.GetAccount = channel.unary_unary(
                '/arian.v1.AccountService/GetAccount',
                request_serializer=arian_dot_v1_dot_account__services__pb2.GetAccountRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.GetAccountResponse.FromString,
                )
        self.CreateAccount = channel.unary_unary(
                '/arian.v1.AccountService/CreateAccount',
                request_serializer=arian_dot_v1_dot_account__services__pb2.CreateAccountRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.CreateAccountResponse.FromString,
                )
        self.UpdateAccount = channel.unary_unary(
                '/arian.v1.AccountService/UpdateAccount',
                request_serializer=arian_dot_v1_dot_account__services__pb2.UpdateAccountRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.UpdateAccountResponse.FromString,
                )
        self.DeleteAccount = channel.unary_unary(
                '/arian.v1.AccountService/DeleteAccount',
                request_serializer=arian_dot_v1_dot_account__services__pb2.DeleteAccountRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.DeleteAccountResponse.FromString,
                )
        self.SetAccountAnchor = channel.unary_unary(
                '/arian.v1.AccountService/SetAccountAnchor',
                request_serializer=arian_dot_v1_dot_account__services__pb2.SetAccountAnchorRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.SetAccountAnchorResponse.FromString,
                )
        self.GetAccountBalance = channel.unary_unary(
                '/arian.v1.AccountService/GetAccountBalance',
                request_serializer=arian_dot_v1_dot_account__services__pb2.GetAccountBalanceRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.GetAccountBalanceResponse.FromString,
                )
        self.GetAnchorBalance = channel.unary_unary(
                '/arian.v1.AccountService/GetAnchorBalance',
                request_serializer=arian_dot_v1_dot_account__services__pb2.GetAnchorBalanceRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.GetAnchorBalanceResponse.FromString,
                )
        self.GetAccountsCount = channel.unary_unary(
                '/arian.v1.AccountService/GetAccountsCount',
                request_serializer=arian_dot_v1_dot_account__services__pb2.GetAccountsCountRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.GetAccountsCountResponse.FromString,
                )
        self.CheckUserAccountAccess = channel.unary_unary(
                '/arian.v1.AccountService/CheckUserAccountAccess',
                request_serializer=arian_dot_v1_dot_account__services__pb2.CheckUserAccountAccessRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.CheckUserAccountAccessResponse.FromString,
                )
        self.SyncAccountBalances = channel.unary_unary(
                '/arian.v1.AccountService/SyncAccountBalances',
                request_serializer=arian_dot_v1_dot_account__services__pb2.SyncAccountBalancesRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.SyncAccountBalancesResponse.FromString,
                )


class AccountServiceServicer(object):
    """Account management service
    """

    def ListAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAccountAnchor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAnchorBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccountsCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckUserAccountAccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncAccountBalances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccountServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.ListAccountsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.ListAccountsResponse.SerializeToString,
            ),
            'GetAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccount,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.GetAccountRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.GetAccountResponse.SerializeToString,
            ),
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.CreateAccountRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.CreateAccountResponse.SerializeToString,
            ),
            'UpdateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAccount,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.UpdateAccountRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.UpdateAccountResponse.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.DeleteAccountRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.DeleteAccountResponse.SerializeToString,
            ),
            'SetAccountAnchor': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAccountAnchor,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.SetAccountAnchorRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.SetAccountAnchorResponse.SerializeToString,
            ),
            'GetAccountBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountBalance,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.GetAccountBalanceRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.GetAccountBalanceResponse.SerializeToString,
            ),
            'GetAnchorBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAnchorBalance,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.GetAnchorBalanceRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.GetAnchorBalanceResponse.SerializeToString,
            ),
            'GetAccountsCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountsCount,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.GetAccountsCountRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.GetAccountsCountResponse.SerializeToString,
            ),
            'CheckUserAccountAccess': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUserAccountAccess,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.CheckUserAccountAccessRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.CheckUserAccountAccessResponse.SerializeToString,
            ),
            'SyncAccountBalances': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncAccountBalances,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.SyncAccountBalancesRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.SyncAccountBalancesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arian.v1.AccountService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AccountService(object):
    """Account management service
    """

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/ListAccounts',
            arian_dot_v1_dot_account__services__pb2.ListAccountsRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.ListAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/GetAccount',
            arian_dot_v1_dot_account__services__pb2.GetAccountRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.GetAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/CreateAccount',
            arian_dot_v1_dot_account__services__pb2.CreateAccountRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.CreateAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/UpdateAccount',
            arian_dot_v1_dot_account__services__pb2.UpdateAccountRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.UpdateAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/DeleteAccount',
            arian_dot_v1_dot_account__services__pb2.DeleteAccountRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.DeleteAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAccountAnchor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/SetAccountAnchor',
            arian_dot_v1_dot_account__services__pb2.SetAccountAnchorRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.SetAccountAnchorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/GetAccountBalance',
            arian_dot_v1_dot_account__services__pb2.GetAccountBalanceRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.GetAccountBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAnchorBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/GetAnchorBalance',
            arian_dot_v1_dot_account__services__pb2.GetAnchorBalanceRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.GetAnchorBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAccountsCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/GetAccountsCount',
            arian_dot_v1_dot_account__services__pb2.GetAccountsCountRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.GetAccountsCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckUserAccountAccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/CheckUserAccountAccess',
            arian_dot_v1_dot_account__services__pb2.CheckUserAccountAccessRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.CheckUserAccountAccessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncAccountBalances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountService/SyncAccountBalances',
            arian_dot_v1_dot_account__services__pb2.SyncAccountBalancesRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.SyncAccountBalancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AccountCollaborationServiceStub(object):
    """Account collaboration service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddCollaborator = channel.unary_unary(
                '/arian.v1.AccountCollaborationService/AddCollaborator',
                request_serializer=arian_dot_v1_dot_account__services__pb2.AddCollaboratorRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.AddCollaboratorResponse.FromString,
                )
        self.RemoveCollaborator = channel.unary_unary(
                '/arian.v1.AccountCollaborationService/RemoveCollaborator',
                request_serializer=arian_dot_v1_dot_account__services__pb2.RemoveCollaboratorRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.RemoveCollaboratorResponse.FromString,
                )
        self.ListCollaborators = channel.unary_unary(
                '/arian.v1.AccountCollaborationService/ListCollaborators',
                request_serializer=arian_dot_v1_dot_account__services__pb2.ListCollaboratorsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.ListCollaboratorsResponse.FromString,
                )
        self.GetCollaboratorCount = channel.unary_unary(
                '/arian.v1.AccountCollaborationService/GetCollaboratorCount',
                request_serializer=arian_dot_v1_dot_account__services__pb2.GetCollaboratorCountRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.GetCollaboratorCountResponse.FromString,
                )
        self.CheckCollaborator = channel.unary_unary(
                '/arian.v1.AccountCollaborationService/CheckCollaborator',
                request_serializer=arian_dot_v1_dot_account__services__pb2.CheckCollaboratorRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.CheckCollaboratorResponse.FromString,
                )
        self.ListUserCollaborations = channel.unary_unary(
                '/arian.v1.AccountCollaborationService/ListUserCollaborations',
                request_serializer=arian_dot_v1_dot_account__services__pb2.ListUserCollaborationsRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.ListUserCollaborationsResponse.FromString,
                )
        self.LeaveCollaboration = channel.unary_unary(
                '/arian.v1.AccountCollaborationService/LeaveCollaboration',
                request_serializer=arian_dot_v1_dot_account__services__pb2.LeaveCollaborationRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.LeaveCollaborationResponse.FromString,
                )
        self.TransferOwnership = channel.unary_unary(
                '/arian.v1.AccountCollaborationService/TransferOwnership',
                request_serializer=arian_dot_v1_dot_account__services__pb2.TransferOwnershipRequest.SerializeToString,
                response_deserializer=arian_dot_v1_dot_account__services__pb2.TransferOwnershipResponse.FromString,
                )


class AccountCollaborationServiceServicer(object):
    """Account collaboration service
    """

    def AddCollaborator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveCollaborator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCollaborators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollaboratorCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckCollaborator(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserCollaborations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LeaveCollaboration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferOwnership(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccountCollaborationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddCollaborator': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCollaborator,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.AddCollaboratorRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.AddCollaboratorResponse.SerializeToString,
            ),
            'RemoveCollaborator': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveCollaborator,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.RemoveCollaboratorRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.RemoveCollaboratorResponse.SerializeToString,
            ),
            'ListCollaborators': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCollaborators,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.ListCollaboratorsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.ListCollaboratorsResponse.SerializeToString,
            ),
            'GetCollaboratorCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollaboratorCount,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.GetCollaboratorCountRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.GetCollaboratorCountResponse.SerializeToString,
            ),
            'CheckCollaborator': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckCollaborator,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.CheckCollaboratorRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.CheckCollaboratorResponse.SerializeToString,
            ),
            'ListUserCollaborations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserCollaborations,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.ListUserCollaborationsRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.ListUserCollaborationsResponse.SerializeToString,
            ),
            'LeaveCollaboration': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaveCollaboration,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.LeaveCollaborationRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.LeaveCollaborationResponse.SerializeToString,
            ),
            'TransferOwnership': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferOwnership,
                    request_deserializer=arian_dot_v1_dot_account__services__pb2.TransferOwnershipRequest.FromString,
                    response_serializer=arian_dot_v1_dot_account__services__pb2.TransferOwnershipResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'arian.v1.AccountCollaborationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AccountCollaborationService(object):
    """Account collaboration service
    """

    @staticmethod
    def AddCollaborator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountCollaborationService/AddCollaborator',
            arian_dot_v1_dot_account__services__pb2.AddCollaboratorRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.AddCollaboratorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveCollaborator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountCollaborationService/RemoveCollaborator',
            arian_dot_v1_dot_account__services__pb2.RemoveCollaboratorRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.RemoveCollaboratorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCollaborators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountCollaborationService/ListCollaborators',
            arian_dot_v1_dot_account__services__pb2.ListCollaboratorsRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.ListCollaboratorsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCollaboratorCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountCollaborationService/GetCollaboratorCount',
            arian_dot_v1_dot_account__services__pb2.GetCollaboratorCountRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.GetCollaboratorCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckCollaborator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountCollaborationService/CheckCollaborator',
            arian_dot_v1_dot_account__services__pb2.CheckCollaboratorRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.CheckCollaboratorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserCollaborations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountCollaborationService/ListUserCollaborations',
            arian_dot_v1_dot_account__services__pb2.ListUserCollaborationsRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.ListUserCollaborationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LeaveCollaboration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountCollaborationService/LeaveCollaboration',
            arian_dot_v1_dot_account__services__pb2.LeaveCollaborationRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.LeaveCollaborationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferOwnership(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/arian.v1.AccountCollaborationService/TransferOwnership',
            arian_dot_v1_dot_account__services__pb2.TransferOwnershipRequest.SerializeToString,
            arian_dot_v1_dot_account__services__pb2.TransferOwnershipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
